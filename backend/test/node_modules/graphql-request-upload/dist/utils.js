"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNestedValue = exports.getFilesKeysAndPayload = exports.hasBlobValue = void 0;
function hasBlobValue(data) {
    for (const value of Object.values(data)) {
        if (typeof value !== 'object' || value === null)
            continue;
        if (value instanceof Blob)
            return true;
        const hasBlob = hasBlobValue(value);
        if (hasBlob)
            return true;
    }
    return false;
}
exports.hasBlobValue = hasBlobValue;
function getFilesKeysAndPayload(variables, initialPath = '') {
    const filesKeys = [];
    const newObject = Array.isArray(variables) ? [] : {};
    for (const [key, value] of Object.entries(variables)) {
        if (value instanceof Blob) {
            filesKeys.push(initialPath + key);
            newObject[key] = null;
            continue;
        }
        if (typeof value === 'object' && value !== null) {
            const [valueFilesKeys, valueObj] = getFilesKeysAndPayload(value, initialPath + key + '.');
            filesKeys.push(...valueFilesKeys);
            newObject[key] = valueObj;
            continue;
        }
        newObject[key] = value;
    }
    return [filesKeys, newObject];
}
exports.getFilesKeysAndPayload = getFilesKeysAndPayload;
function getNestedValue(obj, key) {
    const subkeys = key.split('.');
    while (subkeys.length > 0) {
        const key = subkeys.shift();
        if (key === undefined)
            throw new Error();
        obj = obj[key];
    }
    return obj;
}
exports.getNestedValue = getNestedValue;
