type ToDo {
    id: ID!
    content: String!
    isCompleted: Boolean!
    taskListId: ID!
    taskList: TaskList!
    assignees: [User!]!
    subtasks: [ToDo!]!
}

union ToDoOrBE = ToDo | BaseError

extend type Mutation {
    createToDo(content: String!, taskListId: ID!, todoId: ID): ToDoOrBE!
    updateToDo(id: ID!, content: String, isCompleted: Boolean): ToDoOrBE!
    deleteToDo(id: ID!): Boolean!
    assignUserToToDo(todoId: ID!, userId: ID!): ToDoOrBE!
    unAssignUserFromToDo(todoId: ID!, userId: ID!): ToDoOrBE!
}

extend type Query {
    getToDo(id: ID!): ToDoOrBE!
}