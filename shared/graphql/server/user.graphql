type User {
    id: ID!
    name: String!
    email: String!
    avatar: String
}

type AuthUser {
    user: User!
    token: String!
}

input SignUpInput {
    email: String!
    password: String!
    name: String!
    avatar: String
}

input SignInInput {
    email: String!
    password: String!
}

extend type Mutation {
    signUp(input: SignUpInput): AuthUser!
    signIn(input: SignInInput): AuthUser!
    updateUser(name: String, avatar: String): User!
}

extend type Query {
    getAllUsers: [User!]!
    getMe: User!
}
